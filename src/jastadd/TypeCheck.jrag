aspect TypeCheck{
    eq Program.getChild().type() = unknownType();
    eq Program.unknownDecl().type() = unknownType();

    syn Type Expr.type();

    eq IdUse.type() = decl().type();

    eq Numeral.type() = new IntType();
    eq BinaryExpr.type() {
        if (getLeft().type() == getRight().type()) {
            return getLeft().type();
        }
        return unknownType();
    }
    eq ComparisonExpr.type() = new BoolType();
    eq Call.type() = new IntType();

    inh Type IdDecl.type();
    eq VarDecl.getIdDecl().type() = getType();

    eq Program.getChild().expectedType() = unknownType(); //root pattern
    inh Type Expr.expectedType();

    eq IfStmt.getCond().expectedType() = new BoolType();
    eq WhileStmt.getCond().expectedType() = new BoolType();
    eq VarDecl.getExpr().expectedType() = getIdDecl().type();

    syn boolean Stmt.typeNotCheck() = false;
    syn boolean IfStmt.typeNotCheck() = !getCond().expectedType().isCompatible(getCond().type());
    syn boolean WhileStmt.typeNotCheck() = !getCond().expectedType().isCompatible(getCond().type());
    syn boolean VarDecl.typeNotCheck() {
        if (hasExpr()) {
            return !getExpr().expectedType().isCompatible(getExpr().type());
        } else {
            return false;
        }
    }
}

aspect Types{
    syn boolean Type.isCompatible(Type other);

    eq IntType.isCompatible(Type other) {
        return other.isCompatibleInt();
    }
    eq BoolType.isCompatible(Type other) {
        return other.isCompatibleBool();
    }
    eq UnknownType.isCompatible(Type other) = true;

    // double dispatch
    syn boolean Type.isCompatibleInt();
    syn boolean Type.isCompatibleBool();
    eq UnknownType.isCompatibleInt() = true;
    eq UnknownType.isCompatibleBool() = true;
    eq IntType.isCompatibleInt() = true;
    eq IntType.isCompatibleBool() = false;
    eq BoolType.isCompatibleInt() = false;
    eq BoolType.isCompatibleBool() = true;
}

aspect UnknownType {
    syn nta UnknownType Program.unknownType() = new UnknownType();

    inh UnknownType ASTNode.unknownType();
    eq Program.getChild().unknownType() = unknownType();

    syn boolean Type.isUnknownType() = false;
    eq UnknownType.isUnknownType() = true;
}