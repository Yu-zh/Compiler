aspect NameAnalysis {
    syn IdDecl IdUse.decl() = lookup(getID());
    inh IdDecl IdUse.lookup(String name);

    eq Program.getChild().lookup(String name) = unknownDecl();

    eq Func.getStmt(int index).lookup(String name) {
        IdDecl decl = localLookup(name, index);
        return !decl.isUnknown() ? decl : lookup(name);
    }
    inh IdDecl Func.lookup(String name);
    syn IdDecl Func.localLookup(String name, int until) {
        for (int i = 0; i < getNumPara(); i++) {
            if (getPara(i).getIdDecl().getID().equals(name)) {
                return getPara(i).getIdDecl();
            }
        }
        for (int i = 0; i <= until; i++) {
            if ((getStmt(i) instanceof VarDecl)) {
                VarDecl varDecl = (VarDecl) getStmt(i);
                if (varDecl.getIdDecl().getID().equals(name)) {
                    return varDecl.getIdDecl();
                }
            }
        }
        return unknownDecl();
    }

    eq IfStmt.getBody(int index).lookup(String name) {
        IdDecl decl = localLookup(name, index, 0);
        return !decl.isUnknown() ? decl : lookup(name);
    }
    eq IfStmt.getElse(int index).lookup(String name) {
        IdDecl decl = localLookup(name, index, 1);
        return !decl.isUnknown() ? decl : lookup(name);
    }
    syn IdDecl IfStmt.localLookup(String name, int until, int flag) {
        if (flag==0) {
            for (int i = 0; i <= until; i++) {
                if ((getBody(i) instanceof VarDecl)) {
                    VarDecl varDecl = (VarDecl) getBody(i);
                    if (varDecl.getIdDecl().getID().equals(name)) {
                        return varDecl.getIdDecl();
                    }
                }
            }
        }
        else if (flag==1) {
            for (int i = 0; i <= until; i++) {
                 if ((getElse(i) instanceof VarDecl)) {
                      VarDecl varDecl = (VarDecl) getElse(i);
                      if (varDecl.getIdDecl().getID().equals(name)) {
                          return varDecl.getIdDecl();
                      }
                 }
            }
        }
        else {
            System.out.println("IfStmt gives error flag");
        }
        return unknownDecl();
    }
    inh IdDecl IfStmt.lookup(String name);

    eq WhileStmt.getBody(int index).lookup(String name) {
        IdDecl decl = localLookup(name, index);
        return !decl.isUnknown() ? decl : lookup(name);
    }
    syn IdDecl WhileStmt.localLookup(String name, int until) {
        for (int i = 0; i <= until; i++) {
            if ((getBody(i) instanceof VarDecl)) {
                VarDecl varDecl = (VarDecl) getBody(i);
                    if (varDecl.getIdDecl().getID().equals(name)) {
                        return varDecl.getIdDecl();
                    }
            }
        }
        return unknownDecl();
    }
    inh IdDecl WhileStmt.lookup(String name);

    eq Call.getFun().lookup(String name) = lookupFunc(name);
    inh IdDecl Call.lookupFunc(String name);
    eq Program.getChild().lookupFunc(String name) {
        for (PreFuncDecl pfd : preFunc()) {
            if (pfd.getID().equals(name)) {
                return pfd;
            }
        }
        /*for (int i = 0; i < preFunc().getNumPreFuncDecl(); i++) {
            System.out.println(i);
        }*/ //why this not work ???
        for (int i = 0; i < getNumFunc(); i++) {
            if (getFunc(i).getIdDecl().getID().equals(name)) {
                return getFunc(i).getIdDecl();
            }
        }
        return unknownDecl();
    }

    inh IdDecl IdDecl.lookup(String name);
//    syn boolean IdDecl.isMultiDeclared() = lookup(getID()) != this;
    syn boolean IdDecl.isMultiDeclared() {
//        System.out.println(this.type());
//        System.out.println(this.getID());
        return lookup(getID()) != this;
    }

    eq Func.getIdDecl().lookup(String name) = lookupFunc(name);
    inh IdDecl Func.lookupFunc(String name);

    eq Func.getPara(int index).lookup(String name) {
        for (int i = 0; i < index; i++) {
            if (getPara(i).getIdDecl().getID().equals(name)) {
                return getPara(i).getIdDecl();
            }
        }
        return getPara(index).getIdDecl();
    }

    syn nta List<PreFuncDecl> Program.preFunc() {
        List<PreFuncDecl> plist = new List<PreFuncDecl>();
        plist.add(new PreFuncDecl("read"));
        plist.add(new PreFuncDecl("print"));
        return plist;
    }

}
